/*
 * Copyright (c) 2023 LAZYDESIGNERS
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------
            // | ESC |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |   BKSP   |
            // | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   "|"   |
            // | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |     ENTER    |
            // |  SHIFT  |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  |      SHIFT       |
            // |  CTL  |  WIN  |  ALT  |            SPACE                       |  MO(1) | WIN  |  CTL  |
            // ------------------------------------------------------------------------------------------

            bindings = <
         &lt 2 ESC    &kp N1        &kp N2  &kp N3  &kp N4  &kp N5     &kp N6  &kp N7  &kp N8     &kp N9    &kp N0  &kp MINUS      &kp EQUAL  &kp BSPC
           &kp TAB     &kp Q         &kp W   &kp E   &kp R   &kp T      &kp Y   &kp U   &kp I      &kp O     &kp P   &kp LBKT       &kp RBKT  &kp BSLH
&mt LCTRL CAPSLOCK     &kp A         &kp S   &kp D   &kp F   &kp G      &kp H   &kp J   &kp K      &kp L  &kp SEMI    &kp SQT                  &kp RET
         &kp LSHFT                   &kp Z   &kp X   &kp C   &kp V      &kp B   &kp N   &kp M  &kp COMMA   &kp DOT   &kp FSLH          &mo 1
             &none  &kp LALT  &kp LEFT_GUI                          &kp SPACE                                        &kp RCMD  &kp RIGHT_ALT     &none
            >;
        };

        control_layer {
            // ------------------------------------------------------------------------------------------------
            // | BT CLR | F1  | F2  | F3  | F4  | F5  | F6  | F7  | F8  | F9  | F10  | F11 | F12 |            |
            // |  BT 1   |   |  UP |      |      |      |      |      |    |     |    |     |     |           |
            // |   BT 2   | LT |  DN  | RT |       |       |      |     |    |    |     |     |               |
            // |    BT 3     |     |      |      |     |     |     |     |     |     |     |                  |
            // |   BT 4  |      |      |                                              |       |       |  DEL  |
            // ------------------------------------------------------------------------------------------------

            bindings = <
   &kp GRAVE        &kp F1        &kp F2        &kp F3        &kp F4      &kp F5      &kp F6  &kp F7  &kp F8  &kp F9         &kp F10       &kp F11  &kp F12  &kp DEL
      &trans  &kp C_BRI_DN  &kp C_BRI_UP  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE      &trans  &trans  &trans  &trans          &trans  &kp UP_ARROW   &trans   &trans
&kp CAPSLOCK        &trans        &trans        &trans        &trans      &trans      &trans  &trans  &trans  &trans  &kp LEFT_ARROW     &kp RIGHT            &trans
      &trans                      &trans        &trans        &trans      &trans  &bt BT_CLR  &trans  &trans  &trans          &trans      &kp DOWN   &trans
      &trans   &bootloader    &sys_reset                                              &trans                                                &trans   &trans   &trans
            >;
        };

        layer_2 {
            bindings = <
   &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans  &trans     &trans  &trans  &trans  &trans  &trans
   &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans  &trans     &trans  &trans  &trans  &trans  &trans
   &trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans          &trans
&kp LSHFT          &trans  &trans  &trans  &trans    &trans    &trans  &trans     &trans  &trans  &trans  &trans
   &trans  &trans  &trans                            &trans                                       &trans  &trans  &trans
            >;
        };
    };
};
